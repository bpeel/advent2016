# Advent of code day 2

[compute shader]
#version 450

/* Each workgroup will handle one row (16 columns) */
layout(local_size_x = 16) in;

layout(binding = 0, std140) buffer ssbo {
        uint part1;
        uint part2;
        uint data[];
};

layout(binding = 1, std140) buffer ssbo2 {
        uvec2 range[];
};

void
main()
{
        uint value = data[gl_GlobalInvocationID.x];

        /* Simultaneously calculate the max and min for the row */
        atomicMin(range[gl_WorkGroupID.x].x, value);
        atomicMax(range[gl_WorkGroupID.x].y, value);

        /* Part 2, check for pairs of numbers that divide evenly */
        for (uint i = gl_LocalInvocationID.x + 1; i < gl_WorkGroupSize.x; i++) {
                uint other = data[gl_WorkGroupID.x * gl_WorkGroupSize.x + i];
                uint mx = max(value, other);
                uint mn = min(value, other);
                if (mx % mn == 0) {
                        atomicAdd(part2, mx / mn);
                        break;
                }
        }

        /* Make sure the min/max calculation for this row has finished */
        barrier();

        /* Once per row, add the difference to the sum */
        if (gl_LocalInvocationID.x == 0) {
                uint diff = (range[gl_WorkGroupID.x].y -
                             range[gl_WorkGroupID.x].x);
                atomicAdd(part1, diff);
        }
}

[test]
ssbo 0 subdata uint 0 0
ssbo 0 subdata uint 4 0
ssbo 1 subdata uvec2 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0 4294967295 0

ssbo 0 subdata uint 16		737	1866	1565	1452	1908	1874	232	1928	201	241	922	281	1651	1740	1012	1001
ssbo 0 subdata uint 272		339	581	41	127	331	133	51	131	129	95	499	527	518	435	508	494
ssbo 0 subdata uint 528		1014	575	1166	259	152	631	1152	1010	182	943	163	158	1037	1108	1092	887
ssbo 0 subdata uint 784		56	491	409	1263	1535	41	1431	1207	1393	700	1133	53	131	466	202	62
ssbo 0 subdata uint 1040	632	403	118	352	253	672	711	135	116	665	724	780	159	133	90	100
ssbo 0 subdata uint 1296	1580	85	1786	1613	1479	100	94	1856	546	76	1687	1769	1284	1422	1909	1548
ssbo 0 subdata uint 1552	479	356	122	372	786	1853	979	116	530	123	1751	887	109	1997	160	1960
ssbo 0 subdata uint 1808	446	771	72	728	109	369	300	746	86	910	566	792	616	84	338	57
ssbo 0 subdata uint 2064	6599	2182	200	2097	4146	7155	7018	1815	1173	4695	201	7808	242	3627	222	7266
ssbo 0 subdata uint 2320	1729	600	651	165	1780	2160	626	1215	149	179	1937	1423	156	129	634	458
ssbo 0 subdata uint 2576	1378	121	146	437	1925	2692	130	557	2374	2538	2920	2791	156	317	139	541
ssbo 0 subdata uint 2832	1631	176	1947	259	2014	153	268	752	2255	347	227	2270	2278	544	2379	349
ssbo 0 subdata uint 3088	184	314	178	242	145	410	257	342	183	106	302	320	288	151	449	127
ssbo 0 subdata uint 3344	175	5396	1852	4565	4775	665	4227	171	4887	181	2098	4408	2211	3884	2482	158
ssbo 0 subdata uint 3600	1717	3629	244	258	281	3635	235	4148	3723	4272	3589	4557	4334	4145	3117	4510
ssbo 0 subdata uint 3856	55	258	363	116	319	49	212	44	303	349	327	330	316	297	313	67

compute 16 1 1

# Part 1
probe ssbo uint 0 0 == 34925
# Part 2
probe ssbo uint 0 4 == 221
