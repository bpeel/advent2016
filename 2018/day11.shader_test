[comment]

Run the program once to get the maximum power level in the first
probe. Then set EXPECTED_POWER_LEVEL to that value so that it will
write out the grid position and size in the second probe.

[compute shader]
#version 450

#define GRID_SIZE 300
#define SERIAL_NUMBER 9445
#define EXPECTED_POWER_LEVEL 156

layout(binding = 0) buffer block {
        int best_score;
        ivec3 result;
};

int
calc_power_level(int x, int y)
{
        int rack_id = x + 11;
        int base_power_level = rack_id * (y + 1);
        int increase_power_level = base_power_level + SERIAL_NUMBER;
        int rack_power_level = increase_power_level * rack_id;
        int hundreds = rack_power_level / 100 % 10;
        return hundreds - 5;
}

void
main()
{
        ivec2 pos = ivec2(gl_WorkGroupID.xy);

        ivec2 best_pos = ivec2(0);
        int best_square_size = 0;
        int best_sum = -1000;

        int max_coord = max(pos.x, pos.y);
        int sum = 0;

        for (int square_size = 1;
             square_size < GRID_SIZE - max_coord;
             square_size++) {
                for (int x = 0; x < square_size; x++) {
                        sum += calc_power_level(pos.x + x,
                                                pos.y + square_size - 1);
                }
                for (int y = 0; y < square_size - 1; y++) {
                        sum += calc_power_level(pos.x + square_size - 1,
                                                pos.y + y);
                }
                if (sum > best_sum) {
                        best_sum = sum;
                        best_pos = pos;
                        best_square_size = square_size;
                }
        }

        if (best_sum == EXPECTED_POWER_LEVEL)
                result = ivec3(best_pos + 1, best_square_size);

        atomicMax(best_score, best_sum);
}

[test]
ssbo 0 1024
ssbo 0 subdata int 0 -2147483648

compute 300 300 1

probe ssbo int 0 0 == 0
probe ssbo ivec3 0 16 == 0 0 0
